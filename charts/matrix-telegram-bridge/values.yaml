# Default values for matrix-telegram-bridge.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: dock.mau.dev/mautrix/telegram
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  port: 29317

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: telegram-bridge.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: telegram-bridge-tls
  #    hosts:
  #      - telegram-bridge.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

pvc:
  data:
    storageClassName: openebs-rwx
    capacity: 10M

postgresql:
  # host: db.matrix.svc.cluster.local
  databaseName: telegram-bridge
  username: synapse
  password:
    secretName: synapse-postgresql
    secretKey: postgresql-password

matrix:
  # By default telegram bridge will try to read secrets from {}
  # secretsName: "telegram-bridge-secrets"
  homeserver:
    # domain: "example.com"
    verifySsl: true

    # If matrix homeserver runs on the same cluster, the address can be specified here
    # Otherwise the domain will be used (e.g. "https://example.com")
    # address: "http://matrix-synapse.matrix.svc.cluster.local:8008"
  
  appservice:
    # If matrix homeserver runs on the same cluster, inCluster should be set to `true`, 
    # then the address will be created based on the bridge service. E.g. http://telegram-bridge.matrix.svc.cluster.local:29317
    inCluster: false
    # address: "https://telegram-bridge.example.com"

  bridge: {}
    # If `permissions` is not sepecified, the default permissions will be used. 
    #   '*': relaybot
    #   {.matrix.homeserver.domain}: full
    # To skip the default permissions, the `permissions` has to be set with desired values.
    # permissions:
    #   '*': relaybot
    #   example.com: full
    #   '@admin:example.com': admin

    # To add extra permissions on top of the default ones
    # Example:
    # extraPermissions: 
    #   '@user:example.com': admin
