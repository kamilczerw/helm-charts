apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "matrix-telegram-bridge.fullname" . }}
  labels:
    {{- include "matrix-telegram-bridge.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "matrix-telegram-bridge.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "matrix-telegram-bridge.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "matrix-telegram-bridge.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      {{- if .Values.postgresql.createDbSchema }}
      initContainers:
        - name: database-init
          image: postgres:alpine3.16
          command:
            - "sh"
            - "/opt/init-scripts/create-db.sh"
          envFrom:
            - secretRef:
                name: {{ include "matrix-telegram-bridge.secretName" . }}

          env:
            {{- include "matrix-telegram-bridge.deployment.env" . | nindent 12 }}
            - name: PG_HOST
              value: {{ .Values.postgresql.host }}
            - name: PGPASSWORD
              value: $(PG_PASSWORD)

          volumeMounts:
            - name: init-script
              mountPath: "/opt/init-scripts"
              readOnly: true

      {{- end }}

      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{ include "matrix-telegram-bridge.secretName" . }}
          env:
            - name: MAUTRIX_DIRECT_STARTUP
              value: "true"
            {{- include "matrix-telegram-bridge.deployment.env" . | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: "/data"
              readOnly: true
            {{- if .Values.extraVolumeMounts }}
            {{- .Values.extraVolumeMounts | toYaml | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 29317
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /_matrix/provision/v1/bridge
              port: http
          readinessProbe:
            httpGet:
              path: /_matrix/provision/v1/bridge
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "matrix-telegram-bridge.fullname" . }}-config
        {{- if .Values.postgresql.createDbSchema }}
        - name: init-script
          configMap:
            name: {{ include "matrix-telegram-bridge.init-config-name" . }}
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- .Values.extraVolumes | toYaml | nindent 8 }}
        {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
